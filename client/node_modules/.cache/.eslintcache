[{"/home/hadi/Documents/GitHub/Contact_management/client/src/index.js":"1","/home/hadi/Documents/GitHub/Contact_management/client/src/App.js":"2","/home/hadi/Documents/GitHub/Contact_management/client/src/utils/setAuthToken.js":"3","/home/hadi/Documents/GitHub/Contact_management/client/src/context/contact/ContactState.js":"4","/home/hadi/Documents/GitHub/Contact_management/client/src/context/auth/AuthState.js":"5","/home/hadi/Documents/GitHub/Contact_management/client/src/context/alert/AlertState.js":"6","/home/hadi/Documents/GitHub/Contact_management/client/src/components/layout/Alerts.js":"7","/home/hadi/Documents/GitHub/Contact_management/client/src/components/layout/Navbar.js":"8","/home/hadi/Documents/GitHub/Contact_management/client/src/components/pages/Home.js":"9","/home/hadi/Documents/GitHub/Contact_management/client/src/components/auth/Register.js":"10","/home/hadi/Documents/GitHub/Contact_management/client/src/components/pages/About.js":"11","/home/hadi/Documents/GitHub/Contact_management/client/src/components/auth/Login.js":"12","/home/hadi/Documents/GitHub/Contact_management/client/src/components/routing/PrivateRoute.js":"13","/home/hadi/Documents/GitHub/Contact_management/client/src/context/types.js":"14","/home/hadi/Documents/GitHub/Contact_management/client/src/context/contact/contactContext.js":"15","/home/hadi/Documents/GitHub/Contact_management/client/src/context/contact/contactReducer.js":"16","/home/hadi/Documents/GitHub/Contact_management/client/src/context/auth/authContext.js":"17","/home/hadi/Documents/GitHub/Contact_management/client/src/context/auth/authReducer.js":"18","/home/hadi/Documents/GitHub/Contact_management/client/src/context/alert/alertContext.js":"19","/home/hadi/Documents/GitHub/Contact_management/client/src/context/alert/alertReducer.js":"20","/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/Contacts.js":"21","/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/ContactForm.js":"22","/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/ContactFilter.js":"23","/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/ContactItem.js":"24","/home/hadi/Documents/GitHub/Contact_management/client/src/components/layout/Spinner.js":"25"},{"size":196,"mtime":1637390539985,"results":"26","hashOfConfig":"27"},{"size":1459,"mtime":1637390539985,"results":"28","hashOfConfig":"27"},{"size":252,"mtime":1637390539985,"results":"29","hashOfConfig":"27"},{"size":3289,"mtime":1637390539985,"results":"30","hashOfConfig":"27"},{"size":2718,"mtime":1637390539985,"results":"31","hashOfConfig":"27"},{"size":879,"mtime":1637390539985,"results":"32","hashOfConfig":"27"},{"size":490,"mtime":1637390539985,"results":"33","hashOfConfig":"27"},{"size":1640,"mtime":1637567338889,"results":"34","hashOfConfig":"27"},{"size":696,"mtime":1637390539985,"results":"35","hashOfConfig":"27"},{"size":2679,"mtime":1637464495175,"results":"36","hashOfConfig":"27"},{"size":469,"mtime":1637566949861,"results":"37","hashOfConfig":"27"},{"size":1902,"mtime":1637390539985,"results":"38","hashOfConfig":"27"},{"size":549,"mtime":1637390539985,"results":"39","hashOfConfig":"27"},{"size":879,"mtime":1637390539985,"results":"40","hashOfConfig":"27"},{"size":111,"mtime":1637390539985,"results":"41","hashOfConfig":"27"},{"size":2062,"mtime":1637390539985,"results":"42","hashOfConfig":"27"},{"size":105,"mtime":1637390539985,"results":"43","hashOfConfig":"27"},{"size":1254,"mtime":1637390539985,"results":"44","hashOfConfig":"27"},{"size":107,"mtime":1637390539985,"results":"45","hashOfConfig":"27"},{"size":332,"mtime":1637390539985,"results":"46","hashOfConfig":"27"},{"size":1190,"mtime":1637390539985,"results":"47","hashOfConfig":"27"},{"size":2524,"mtime":1637390539985,"results":"48","hashOfConfig":"27"},{"size":773,"mtime":1637390539985,"results":"49","hashOfConfig":"27"},{"size":1601,"mtime":1637390539985,"results":"50","hashOfConfig":"27"},{"size":293,"mtime":1637390539985,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yrh53v",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hadi/Documents/GitHub/Contact_management/client/src/index.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/App.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/utils/setAuthToken.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/contact/ContactState.js",["106"],"import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\n\nimport {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: null,\n        current: null,\n        filtered: null,\n        error: null\n    }\n\n    const [state, dispatch] = useReducer(contactReducer, initialState);\n\n    // Get Contacts\n    const getContacts = async () => {\n        try {\n            const res = await axios.get('/api/contacts');\n            dispatch({ type: GET_CONTACTS, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // Add Contact\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // Delete Contact\n    const deleteContact = async id => {\n        try {\n            await axios.delete(`/api/contacts/${id}`);\n            dispatch({ type: DELETE_CONTACT, payload: id });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    // Set Current Contact\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact })\n    }\n\n    // Clear Current Contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT })\n    }\n\n    // Update Contact\n    const updateContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n            dispatch({ type: UPDATE_CONTACT, payload: res.data });\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // Filter Contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text })\n    }\n\n    // Clear Contacts\n    const clearContacts = () => {\n        dispatch({ type: CLEAR_CONTACTS });\n    }\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER })\n    }\n\n    return (\n        <contactContext.Provider\n            value={{\n                        contacts: state.contacts,\n                        current: state.current,\n                        filtered: state.filtered,\n                        error: state.error,\n                        addContact,\n                        updateContact,\n                        deleteContact,\n                        setCurrent,\n                        clearCurrent,\n                        filterContacts,\n                        clearFilter,\n                        getContacts,\n                        clearContacts\n                    }}\n        >\n            {props.children}\n        </contactContext.Provider>\n    )\n}\n\nexport default ContactState;","/home/hadi/Documents/GitHub/Contact_management/client/src/context/auth/AuthState.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/alert/AlertState.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/layout/Alerts.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/layout/Navbar.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/pages/Home.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/auth/Register.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/pages/About.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/auth/Login.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/routing/PrivateRoute.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/types.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/contact/contactContext.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/contact/contactReducer.js",["107"],"import {\n    GET_CONTACTS,\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR\n} from '../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: action.payload,\n                loading: false\n            }\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, action.payload]\n            }\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact)\n            }\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact._id !== action.payload)\n            }\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            }\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            }\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${action.payload}`, 'gi');\n                    return contact.name.match(regex) || contact.email.match(regex);\n                })\n            }\n        case CLEAR_CONTACTS:\n            return {\n                ...state,\n                contacts: null,\n                filtered: null,\n                error: null,\n                current: null\n            }\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            }\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","/home/hadi/Documents/GitHub/Contact_management/client/src/context/auth/authContext.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/auth/authReducer.js",["108"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false, \n                user: action.payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}","/home/hadi/Documents/GitHub/Contact_management/client/src/context/alert/alertContext.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/context/alert/alertReducer.js",["109"],"import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case SET_ALERT:\n            return [...state, action.payload]\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload)\n        default:\n            return state;\n    }\n}","/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/Contacts.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/ContactForm.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/ContactFilter.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/contacts/ContactItem.js",[],"/home/hadi/Documents/GitHub/Contact_management/client/src/components/layout/Spinner.js",[],{"ruleId":"110","severity":1,"message":"111","line":16,"column":5,"nodeType":"112","messageId":"113","endLine":16,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":14,"column":1,"nodeType":"116","endLine":76,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":12,"column":1,"nodeType":"116","endLine":51,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":3,"column":1,"nodeType":"116","endLine":12,"endColumn":2},"no-unused-vars","'CONTACT_ERROR' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]